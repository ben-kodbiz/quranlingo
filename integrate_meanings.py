#!/usr/bin/env python3
"""
Script to integrate the scraped word meanings into the app.
This script creates a JavaScript file with the word meanings that can be imported into the app.
"""

import json
import os

# Constants
INPUT_FILE = "word_meanings.json"
OUTPUT_FILE = "word_meanings.js"

def load_word_meanings():
    """Load the scraped word meanings from the JSON file."""
    if not os.path.exists(INPUT_FILE):
        print(f"Error: {INPUT_FILE} not found. Run scrape_almaany.py first.")
        return None
    
    try:
        with open(INPUT_FILE, 'r', encoding='utf-8') as f:
            return json.load(f)
    except Exception as e:
        print(f"Error loading word meanings: {e}")
        return None

def generate_js_file(word_meanings):
    """Generate a JavaScript file with the word meanings."""
    js_content = """// This file is auto-generated by integrate_meanings.py
// It contains meanings for Arabic words scraped from Almaany.com

const WORD_MEANINGS = {
"""
    
    for i, (word, meanings) in enumerate(word_meanings.items()):
        # Format the word and its meanings as a JavaScript object
        js_content += f"  '{word}': [\n"
        for meaning in meanings:
            # Escape single quotes in the meaning
            escaped_meaning = meaning.replace("'", "\\'")
            js_content += f"    '{escaped_meaning}',\n"
        js_content += "  ]"
        
        # Add a comma if this is not the last item
        if i < len(word_meanings) - 1:
            js_content += ","
        
        js_content += "\n"
    
    js_content += "};\n\n"
    js_content += """// Export the word meanings for use in the app
if (typeof module !== 'undefined' && module.exports) {
  module.exports = { WORD_MEANINGS };
}
"""
    
    try:
        with open(OUTPUT_FILE, 'w', encoding='utf-8') as f:
            f.write(js_content)
        print(f"Successfully generated {OUTPUT_FILE} with {len(word_meanings)} words")
        return True
    except Exception as e:
        print(f"Error generating JavaScript file: {e}")
        return False

def main():
    # Load the scraped word meanings
    word_meanings = load_word_meanings()
    if not word_meanings:
        return
    
    # Generate the JavaScript file
    success = generate_js_file(word_meanings)
    if success:
        print("Integration complete. You can now use the word meanings in your app.")
        print(f"Import {OUTPUT_FILE} in your HTML file and use WORD_MEANINGS to access the meanings.")

if __name__ == "__main__":
    main()
